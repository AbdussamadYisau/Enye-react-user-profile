[{"C:\\Users\\User\\Enye-FrontEnd-Challenge\\src\\App.js":"1","C:\\Users\\User\\Enye-FrontEnd-Challenge\\src\\Components\\Records.js":"2","C:\\Users\\User\\Enye-FrontEnd-Challenge\\src\\Components\\Pagination.js":"3","C:\\Users\\User\\Enye-FrontEnd-Challenge\\src\\index.js":"4"},{"size":4624,"mtime":1610666835829,"results":"5","hashOfConfig":"6"},{"size":1119,"mtime":1610658084831,"results":"7","hashOfConfig":"6"},{"size":677,"mtime":1610642698283,"results":"8","hashOfConfig":"6"},{"size":207,"mtime":1610619317931,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"xok55f",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\User\\Enye-FrontEnd-Challenge\\src\\App.js",["21","22","23","24"],"import React, {useEffect, useState } from 'react'\r\nimport {  } from \"module\";\r\nimport axios from 'axios'\r\nimport Records from './Components/Records';\r\nimport Pagination from './Components/Pagination';\r\nimport { Container} from 'react-bootstrap';\r\n\r\n\r\nfunction App() {\r\n  const [records, setRecords] = useState([]);\r\n  const [recordToPrint, setRecordToPrint] = useState(records);\r\n  const [keysArr, setKeysArr] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(20);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchGender, setSearchGender] = useState(\"\");\r\n  const [searchPayment, setSearchPayment] = useState(\"\");\r\n  \r\n  const [genderFilter, setGenderFilter] = useState([]);\r\n  const [filteredPatients, setFilteredPatients] = useState([]);\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      const res = await axios.get('https://api.enye.tech/v1/challenge/records');\r\n      setRecords(res.data.records.profiles);\r\n      setKeysArr(Object.keys(res.data.records.profiles[0]));\r\n      setLoading(false);\r\n    }\r\n\r\n    fetchPosts();\r\n  }, []); \r\n\r\n  useEffect(() => {\r\n    setFilteredPatients(\r\n      records.filter((record) =>\r\n        record.FirstName.toLowerCase().includes(search.toLowerCase()) ||\r\n        record.LastName.toLowerCase().includes(search.toLowerCase())\r\n     \r\n      )\r\n    );\r\n  }, [search, records]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if(searchGender === 'All') {\r\n      setFilteredPatients(\r\n        records.filter((record) =>\r\n          record.Gender.toLowerCase()\r\n        )\r\n      );\r\n    } else {\r\n      setFilteredPatients(\r\n        records.filter((record) =>\r\n          \r\n          record.Gender.toLowerCase() === (searchGender.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n  }, [searchGender, records]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (searchPayment === 'All') {\r\n      setFilteredPatients(\r\n        records.filter((record) =>\r\n          record.PaymentMethod.toLowerCase()\r\n        )\r\n      );\r\n\r\n    } else {\r\n      setFilteredPatients(\r\n        records.filter((record) =>\r\n          record.PaymentMethod.toLowerCase().includes(searchPayment.toLowerCase())\r\n        )\r\n      );\r\n\r\n    }\r\n  }, [searchPayment, records]);\r\n  \r\n \r\n  //  Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = records.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n\r\n  //  Change Page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n  \r\n  //  Search Result \r\n\r\n  const searchResult = () => {\r\n      if (filteredPatients.length === records.length) {\r\n        return(\r\n          <Records records ={currentPosts} keysArr = {keysArr} loading = {loading} />\r\n        );\r\n      } else {\r\n\r\n        console.log(filteredPatients);\r\n        return(\r\n          <Records records ={filteredPatients} keysArr = {keysArr} loading = {loading} />\r\n          \r\n          \r\n        );\r\n      }\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <div>\r\n          <Container>\r\n            <h1>Enye React User Profiles</h1>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Search First Name or Last Name'\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n            \r\n            {/* <h2> Filter Based on Gender or Payment Method</h2> */}\r\n\r\n            <h2> Filter Based on Gender or Payment Method</h2>\r\n            <div className='d-flex'>\r\n        \r\n                <select onChange={(e) => setSearchGender(e.target.value)}>\r\n                    <option value='Male'>Male</option>\r\n                    <option value='Female'>Female</option>\r\n                    <option selected value='All'>All</option>\r\n                </select>\r\n                  \r\n            \r\n                <select\r\n                  onChange={(e) => setSearchPayment(e.target.value)}\r\n                >\r\n                  <option value='CC'>CC</option>\r\n                  <option value='check'>Check</option>\r\n                  <option value='paypal'>PayPal</option>\r\n                  <option value='money order'>Money Order</option>\r\n                  <option selected value='All'>All</option>\r\n\r\n                </select>\r\n            \r\n\r\n            </div>\r\n\r\n          {\r\n            searchResult()\r\n          }\r\n          <Pagination postsPerPage={postsPerPage} totalPosts={records.length} paginate={paginate} />\r\n          </Container>\r\n        </div>\r\n      </>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n","C:\\Users\\User\\Enye-FrontEnd-Challenge\\src\\Components\\Records.js",[],"C:\\Users\\User\\Enye-FrontEnd-Challenge\\src\\Components\\Pagination.js",["25"],"import React from 'react';\r\n\r\nconst Pagination = ({postsPerPage, totalPosts, paginate}) => {\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalPosts/postsPerPage); i +=1){\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n       <nav>\r\n          <ul className='pagination'>\r\n            {pageNumbers.map(number => (\r\n                <li key = {number} className='page-item'>\r\n                    <a onClick={() => paginate(number)} href='#' className='page-link'>\r\n                        {number}\r\n                    </a>\r\n                </li>\r\n            )\r\n            )}\r\n          </ul> \r\n       </nav>\r\n    );\r\n};\r\n\r\nexport default Pagination;","C:\\Users\\User\\Enye-FrontEnd-Challenge\\src\\index.js",[],["26","27"],{"ruleId":"28","severity":1,"message":"29","line":11,"column":10,"nodeType":"30","messageId":"31","endLine":11,"endColumn":23},{"ruleId":"28","severity":1,"message":"32","line":11,"column":25,"nodeType":"30","messageId":"31","endLine":11,"endColumn":41},{"ruleId":"28","severity":1,"message":"33","line":20,"column":10,"nodeType":"30","messageId":"31","endLine":20,"endColumn":22},{"ruleId":"28","severity":1,"message":"34","line":20,"column":24,"nodeType":"30","messageId":"31","endLine":20,"endColumn":39},{"ruleId":"35","severity":1,"message":"36","line":15,"column":21,"nodeType":"37","endLine":15,"endColumn":88},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},"no-unused-vars","'recordToPrint' is assigned a value but never used.","Identifier","unusedVar","'setRecordToPrint' is assigned a value but never used.","'genderFilter' is assigned a value but never used.","'setGenderFilter' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-global-assign","no-unsafe-negation"]